#!/usr/bin/env bash

PREFIX='apply-'
REPO_URL=https://api.github.com/repos/ministryofjustice/laa-apply-for-legal-aid/pulls
KUBE_ENV_UAT_NAMESPACE=laa-apply-for-legalaid-uat

OPEN_PRS=$(curl -s $REPO_URL | jq -c -r '.[] | .head.ref | gsub("[/_.]"; "-")')

UAT_RELEASES=$(helm list --tiller-namespace=laa-apply-for-legalaid-uat --all --output json)
ACTIVE_NAMESPACES=$(echo $UAT_RELEASES | jq -c -r '. | .Releases [] | select(.Name != "apply-master" ) | .Name')

function pr_has_closed() {
    TRIM_NAME=$(echo $1 | sed -En s/$PREFIX/''/p)

    if [[ $OPEN_PRS[@] =~ $TRIM_NAME ]]; then
        return 1
    else
        return 0
    fi
}

for environment in $(echo "$ACTIVE_NAMESPACES"); do
    if pr_has_closed $environment; then
      helm --tiller-namespace=$KUBE_ENV_UAT_NAMESPACE delete $environment --dry-run
    else
      echo "PR still open, retaining $environment"
    fi
done

## ruby version
# #!/usr/bin/env ruby
#  require 'json'
#  require 'http'
#
#  PREFIX = 'apply-'.freeze
#  REPO_NAME = 'laa-apply-for-legal-aid'.freeze
#
#  response = HTTP.get("https://api.github.com/repos/ministryofjustice/#{REPO_NAME}/pulls")
#  open_pr = JSON.parse(response.body, symbolize_names: true).map { |pr| pr[:head][:ref].gsub(/[\(\)\[\]_\/\s\.]/, '-') }
#
#  uat_releases = JSON.parse(`helm list --tiller-namespace=${KUBE_ENV_UAT_NAMESPACE} --all --output json`, symbolize_names: true)
#  active_namespaces = uat_releases[:Releases].map { |helm| helm[:Name] } - ["#{PREFIX}master"]
#
#  active_namespaces.each do |environment|
#    pr_still_exists = open_pr.map { |name| name.include?(environment.delete_prefix(PREFIX)) }.any?
#    result = if pr_still_exists
#               "PR still open, retaining #{environment}"
#             else
#               `helm --tiller-namespace=${KUBE_ENV_UAT_NAMESPACE} delete #{environment} --dry-run`
#             end
#    puts result
#  end

## Bash versions of calls
# curl -s https://api.github.com/repos/ministryofjustice/laa-apply-for-legal-aid/pulls | jq -c -r '.[] | .head.ref | gsub("[/_.]"; "-")''
# helm list --tiller-namespace=laa-apply-for-legalaid-uat --all --output json | jq -c -r '. | .Releases [] | select(.Name != "apply-master" ) | .Name'
